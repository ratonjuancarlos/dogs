[{"/home/pabloh/projects/pablo/dogs/src/App.js":"1","/home/pabloh/projects/pablo/dogs/src/reportWebVitals.js":"2","/home/pabloh/projects/pablo/dogs/src/index.js":"3","/home/pabloh/projects/pablo/dogs/src/MyTeam.js":"4","/home/pabloh/projects/pablo/dogs/src/Home.js":"5","/home/pabloh/projects/pablo/dogs/src/Detail.js":"6","/home/pabloh/projects/pablo/dogs/src/useLocalStorage.js":"7"},{"size":891,"mtime":1610757548592,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610742164556,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1610742164556,"results":"11","hashOfConfig":"9"},{"size":1299,"mtime":1610823753492,"results":"12","hashOfConfig":"9"},{"size":2401,"mtime":1610823793324,"results":"13","hashOfConfig":"9"},{"size":2232,"mtime":1610824264134,"results":"14","hashOfConfig":"9"},{"size":1326,"mtime":1610760617294,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"njwv7r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pabloh/projects/pablo/dogs/src/App.js",["31"],"/home/pabloh/projects/pablo/dogs/src/reportWebVitals.js",[],"/home/pabloh/projects/pablo/dogs/src/index.js",[],"/home/pabloh/projects/pablo/dogs/src/MyTeam.js",["32","33"],"/home/pabloh/projects/pablo/dogs/src/Home.js",["34","35"],"import React, { useState, useEffect } from \"react\";\nimport useFetch from \"use-http\";\nimport { Link } from \"react-router-dom\";\nimport toPairs from \"lodash/toPairs\";\nimport groupBy from \"lodash/groupBy\";\n\nvar miMapa = new Map();\n\nconst Home = (props) => {\n  const [breeds, setBreeds] = useState();\n  const [filteredBreeds, setFilteredBreeds] = useState();\n  const { loading, error, data = [] } = useFetch(\n    \"https://dog.ceo/api/breeds/list/all\",\n    []\n  );\n\n  useEffect(() => {\n    let breeds = data.message ? toPairs(data.message) : false;\n\n    if (breeds) {\n      breeds.map(([breed, subBreed]) => {\n        subBreed.length > 0\n          ? subBreed.map((sb) => {\n              miMapa.set(`${breed}-${sb}`, { breed, sb });\n            })\n          : miMapa.set(`${breed}`, { breed });\n      });\n    }\n\n    setBreeds(breeds);\n    setFilteredBreeds(breeds);\n  }, [data]);\n\n  const filterDogs = (e) => {\n    const search = e.target.value;\n    if (search !== \"\") {\n      const filteredMap = [];\n      for (var [clave, valor] of miMapa.entries()) {\n        if (clave.includes(search)) {\n          filteredMap.push(valor);\n        }\n      }\n      const groupFiltered = groupBy(filteredMap, \"breed\");\n      const arranged = {};\n      for (const property in groupFiltered) {\n        arranged[property] = groupFiltered[property]\n          .reduce((acc, curr) => acc.concat([curr.sb]), [])\n          .filter((sb) => sb);\n      }\n      const pairedGroup = toPairs(arranged);\n      setFilteredBreeds(pairedGroup);\n    } else {\n      setFilteredBreeds(breeds);\n    }\n  };\n\n  const getTitle = (subbreed, breed) =>\n    subbreed.length > 0 ? breed : <Link to={`/detail/${breed}`}>{breed}</Link>;\n\n  return (\n    <>\n      {error && \"Error!\"}\n      {loading && \"Loading...\"}\n      <div>\n        <input type=\"text\" onChange={filterDogs} />\n        <ul>\n          {filteredBreeds &&\n            filteredBreeds.map(([breed, subbreed]) => (\n              <li key={breed}>\n                {getTitle(subbreed, breed)}\n                {subbreed.length > 0 &&\n                  subbreed.map((sb) => (\n                    <ul>\n                      <li>\n                        <Link to={`/detail/${breed}/${sb}`}>{sb}</Link>\n                      </li>\n                    </ul>\n                  ))}\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;\n","/home/pabloh/projects/pablo/dogs/src/Detail.js",[],"/home/pabloh/projects/pablo/dogs/src/useLocalStorage.js",[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":23,"column":21,"nodeType":"43","endLine":23,"endColumn":47},{"ruleId":"44","severity":1,"message":"45","line":21,"column":38,"nodeType":"46","messageId":"47","endLine":21,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":23,"column":31,"nodeType":"46","messageId":"47","endLine":23,"endColumn":33},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]